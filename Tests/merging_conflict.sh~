#!/bin/bash

#----------------------------------------------------------------------------------------------
#
# This script creates and commits to Github two updates from different users that have a conflict
# in loop.c
#
# Parameters: No parameters
#
#-----------------------------------------------------------------------------------------------

read -p "Make sure you have run reset_for_test and press key..."

cd /home/fatima/Raspi_sw/Facj/Repo1

        #Update loop.c
	grep -Po 'Version \K[^ ]*' loop.c >/dev/null 2>&1
	current_version=$(grep -Po 'Version \K[^ ]*' loop.c)
        #echo $current_version
	last_dot=(${current_version//./ })
	sed -i 's/'$current_version'*./'${last_dot[0]}'.'${last_dot[1]}'.'999' /' loop.c
        
	git add loop.c
	git commit -m "v.${last_dot[0]}.${last_dot[1]}.$999"
	git tag -s v.${last_dot[0]}.${last_dot[1]}.$((999)) -m "v.${last_dot[0]}.${last_dot[1]}.999"


	#Push changes to the repository
	git push origin master
	git push --tags
        COMMIT=$(git rev-parse HEAD)

read -p "Download this commit ($COMMIT) and press key..."

cd /home/fatima/Raspi_sw/Facj2/Repo1

        #Update loop.c
	grep -Po 'Version \K[^ ]*' loop_2.c >/dev/null 2>&1
	current_version=$(grep -Po 'Version \K[^ ]*' loop_2.c)
        #echo $current_version
	last_dot=(${current_version//./ })
	sed -i 's/'$current_version'*./'${last_dot[0]}'.'${last_dot[1]}'.'$((222))' /' loop_2.c
        
	git add loop_2.c
	git commit -m "v.${last_dot[0]}.${last_dot[1]}.$((222))"
	git tag -u 4836E9B1 v.${last_dot[0]}.${last_dot[1]}.$((last_dot[2]+1)) -m "v.${last_dot[0]}.${last_dot[1]}.$((222))"


	#Push changes to the repository
	git push origin master
	git push --tags
        COMMIT=$(git rev-parse HEAD)



